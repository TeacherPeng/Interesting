<!-- AccelDecelExample.xaml
     This example shows how to use the AccelerationRatio and DecelerationRatio properties of timelines
     to make animations speed up or slow down as they progress. -->

<Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  x:Class="Animation_TimingBehaviors.AccelDecelExample" 
  xmlns:SampleControls="clr-namespace:Animation_TimingBehaviors"
  WindowTitle="Acceleration and Deceleration Example">
  
  <Border Background="{StaticResource MyGridBrushResource}">

    <StackPanel Margin="20">
      
      <Border Style="{StaticResource myIntroTextBorderStyle}"> 
        <StackPanel Orientation="Horizontal">
          <TextBlock Margin="20">
            This example shows how the AccelerationRatio and DecelerationRatio properties
            can be used to make animations speed up or slow down as they progress. Several rectangles
            are animated by DoubleAnimations with identical durations and target values, but with different
            AccelerationRatio and DecelerationRatio settings.
          </TextBlock>
          <SampleControls:ElapsedTimeControl x:Name="elapsedTime" Margin="20" />

        </StackPanel>
      </Border>

      <TextBlock>No Acceleration or Deceleration</TextBlock>
      <Rectangle Name="nonAcceleratedOrDeceleratedRectangle" Fill="#AA3333FF" Width="10" Height="20"
        HorizontalAlignment="Left" />
      <TextBlock Margin="0,20,0,0">AccelerationRatio="0.4"</TextBlock>
      <Rectangle Name="acceleratedRectangle" Fill="#AA3333FF" Width="10" Height="20" HorizontalAlignment="Left" />
      <TextBlock Margin="0,20,0,0">DecelerationRatio="0.6"</TextBlock>
      <Rectangle Name="deceleratedRectangle" Fill="#AA3333FF" Width="10" Height="20" HorizontalAlignment="Left" />
      <TextBlock Margin="0,20,0,0">AccelerationRatio="0.4" DecelerationRatio="0.6"</TextBlock>
      <Rectangle Name="acceleratedAndDeceleratedRectangle" Fill="#AA3333FF" Width="10" Height="20"
        HorizontalAlignment="Left" />

      <!-- Create a button to restart the animations. -->
      <Button Name="myRestartButton" Margin="0,30,0,0" HorizontalAlignment="Left">Restart Animations
        <Button.Triggers>
          <EventTrigger RoutedEvent="Button.Click">
            <BeginStoryboard>
            <Storyboard CurrentStateInvalidated="stateInvalidated">
            
              <!-- Creates an animation without acceleration or deceleration for comparison. -->
              <DoubleAnimation         
                Storyboard.TargetName="nonAcceleratedOrDeceleratedRectangle" 
                Storyboard.TargetProperty="(Rectangle.Width)"
                Duration="0:0:10" From="20" To="400" />              

              <!-- Creates an animation that accelerates through 40% of its duration. -->
              <DoubleAnimation 
                Storyboard.TargetName="acceleratedRectangle" 
                Storyboard.TargetProperty="(Rectangle.Width)"
                AccelerationRatio="0.4" Duration="0:0:10" From="20" To="400" />
          
              <!-- Creates an animation that decelerates through 60% of its duration. -->
              <DoubleAnimation 
                Storyboard.TargetName="deceleratedRectangle" 
                Storyboard.TargetProperty="(Rectangle.Width)"
                DecelerationRatio="0.6" Duration="0:0:10" From="20" To="400" />

              <!-- Creates an animation that accelerates through 40% of its duration and
                   decelerates through the 60% of its duration. -->
              <DoubleAnimation 
                Storyboard.TargetName="acceleratedAndDeceleratedRectangle" 
                Storyboard.TargetProperty="(Rectangle.Width)"
                AccelerationRatio="0.4" DecelerationRatio="0.6" Duration="0:0:10" From="20" To="400" />
          
            </Storyboard>  
            </BeginStoryboard>
          </EventTrigger>      
        </Button.Triggers>         
      </Button>
    </StackPanel>
  </Border>  
</Page>
