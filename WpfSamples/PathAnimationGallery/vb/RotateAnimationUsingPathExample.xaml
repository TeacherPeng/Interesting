<!-- RotateAnimationUsingPath.XAML
     This example shows how to use PathGeometry and DoubleAnimationUsingPath to animate a rectangle
     along a path. In addition, the rectangle is rotated.-->

<Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
  WindowTitle="Rotate Animation Using Path Example"
  Background="{StaticResource MyGridBrushResource}">


  <DockPanel Margin="20">

    <Border Background="#99FFFFFF" BorderBrush="#CCCCFF" BorderThickness="2"
      Margin="0,0,0,20" Padding="20" DockPanel.Dock="Top">
      <TextBlock Width="750" TextWrapping="Wrap">
        This example animates the X, Y and Angle transform properties using a path geometry. This results in a rectangle animating along
        a path across the screen and rotating to follow the contours of the path. The DoubleAnimationUsingPath object is needed because 
        the X, Y, and Angle properties use double values.
      </TextBlock>
    </Border>

    <!-- This StackPanel renders the example on the left and the code example on the right -->
    <StackPanel DockPanel.Dock="Left">

      <!-- Canvas Containing the animated object and the path it follows during animation -->
      <Canvas HorizontalAlignment="Left" Margin="0" Width="340" Height="215" >

        <!-- This Path is only to show the path that the animated object will follow. -->
        <Path VerticalAlignment="Top" Margin="15,15,15,15" 
          Data="M 10,100 C 35,0 135,0 160,100 180,190 285,200 310,100"
          Stroke="Black" StrokeThickness="2"
          Stretch="None" />

        <!-- This geometry renders the rectangle that is animated across the screen. -->
        <Path Fill="Blue" Margin="0,0,15,15">
          <Path.Data>
            <RectangleGeometry  x:Name="MyAnimatedRectGeometry" Rect="0,0 30 30" >
              <RectangleGeometry.Transform>
                <TransformGroup>
                  <RotateTransform x:Name="MyRotateTransform" Angle="0" CenterX="15" CenterY="15" />
                  <TranslateTransform x:Name="MyTranslateTransform" X="10" Y="100" />
                </TransformGroup>
              </RectangleGeometry.Transform>
            </RectangleGeometry>
          </Path.Data>
        </Path>
      </Canvas>

    <!-- Create button to restart the animations. -->
    <Button Width="80" HorizontalAlignment="Left" >
      Start Animations

      <!-- Trigger and StoryBoard to initiate the animation when the button is clicked. -->
      <Button.Triggers>
        <EventTrigger RoutedEvent="Button.Click">
          <BeginStoryboard Name="MyBeginStoryboard">
            <Storyboard>

              <!-- Animates the angle along the path. -->
              <DoubleAnimationUsingPath
                Storyboard.TargetName="MyRotateTransform"
                Storyboard.TargetProperty="Angle"
                Source="Angle" 
                Duration="0:0:5" 
                RepeatBehavior="Forever" AutoReverse="True" >
                <DoubleAnimationUsingPath.PathGeometry>
                  <PathGeometry Figures="M 10,100 C 35,0 135,0 160,100 180,190 285,200 310,100" />
                </DoubleAnimationUsingPath.PathGeometry>
              </DoubleAnimationUsingPath>

              <!-- Animates the rectangle horizotally along the path. -->
              <DoubleAnimationUsingPath
                Storyboard.TargetName="MyTranslateTransform"
                Storyboard.TargetProperty="X"
                Source="X" 
                Duration="0:0:5" 
                RepeatBehavior="Forever" AutoReverse="True" >
                <DoubleAnimationUsingPath.PathGeometry>
                  <PathGeometry Figures="M 10,100 C 35,0 135,0 160,100 180,190 285,200 310,100" />
                </DoubleAnimationUsingPath.PathGeometry>
              </DoubleAnimationUsingPath>

              <!-- Animates the rectangle vertically along the path. -->
              <DoubleAnimationUsingPath
                Storyboard.TargetName="MyTranslateTransform"
                Storyboard.TargetProperty="Y"
                Source="Y" 
                Duration="0:0:5" 
                RepeatBehavior="Forever" AutoReverse="True" >
                <DoubleAnimationUsingPath.PathGeometry>
                  <PathGeometry Figures="M 10,100 C 35,0 135,0 160,100 180,190 285,200 310,100" />
                </DoubleAnimationUsingPath.PathGeometry>
              </DoubleAnimationUsingPath>
            </Storyboard>
          </BeginStoryboard>
        </EventTrigger>
      </Button.Triggers>
    </Button>
    
    </StackPanel>


      <Border Background="#EEEEEE" BorderBrush="Black" BorderThickness="1">
        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
        <TextBlock Style="{StaticResource CodeSnippetParagraph}"  xml:space="preserve">
        ...
        <!-- This geometry renders the rectangle that is animated across the screen. -->
        &lt;Path Fill="Blue" Margin="0,0,15,15"&gt;
          &lt;Path.Data&gt;
            &lt;RectangleGeometry  x:Name="MyAnimatedRectGeometry" Rect="0,0 30 30" &gt;
              &lt;RectangleGeometry.Transform&gt;
                &lt;TransformGroup>
                  &lt;RotateTransform x:Name="MyRotateTransform" Angle="0" CenterX="15" CenterY="15" /&gt;
                  &lt;TranslateTransform x:Name="MyTranslateTransform" X="10" Y="100"  /&gt;
                &lt;/TransformGroup>
              &lt;/RectangleGeometry.Transform&gt;
            &lt;/RectangleGeometry&lt;
          &lt;/Path.Data&gt;
        &lt;/Path&gt;
        ...
        &lt;Storyboard&gt;
        
           <Bold>&lt;!-- Animates the angle along the path. --&gt;
           &lt;DoubleAnimationUsingPath
              Storyboard.TargetName="MyRotateTransform"
              Storyboard.TargetProperty="Angle"
              Duration="0:0:5" 
              RepeatBehavior="Forever" AutoReverse="True" &gt;
                &lt;DoubleAnimationUsingPath.PathGeometry&gt;
                  &lt;PathGeometry Figures="M 10,100 C 35,0 135,0 160,100 180,190 285,200 310,100" /&gt;
                &lt;/DoubleAnimationUsingPath.PathGeometry&gt;
              &lt;/DoubleAnimationUsingPath&gt;
 
           &lt;!-- Animates the rectangle horizotally along the path. --&gt;
           &lt;DoubleAnimationUsingPath
              Storyboard.TargetName="MyTranslateTransform"
              Storyboard.TargetProperty="X"
              Source="X" 
              Duration="0:0:5" 
              RepeatBehavior="Forever" AutoReverse="True" &gt;
                &lt;DoubleAnimationUsingPath.PathGeometry&gt;
                  &lt;PathGeometry Figures="M 10,100 C 35,0 135,0 160,100 180,190 285,200 310,100" /&gt;
                &lt;/DoubleAnimationUsingPath.PathGeometry&gt;
              &lt;/DoubleAnimationUsingPath&gt;
 
           &lt;!-- Animates the rectangle vertically along the path. --&gt;
           &lt;DoubleAnimationUsingPath
              Storyboard.TargetName="MyTranslateTransform"
              Storyboard.TargetProperty="Y"
              Source="Y" 
              Duration="0:0:5" 
              RepeatBehavior="Forever" AutoReverse="True" &gt;
                &lt;DoubleAnimationUsingPath.PathGeometry&gt;
                  &lt;PathGeometry Figures="M 10,100 C 35,0 135,0 160,100 180,190 285,200 310,100" /&gt;
                &lt;/DoubleAnimationUsingPath.PathGeometry&gt;
              &lt;/DoubleAnimationUsingPath&gt;</Bold>
      &lt;/Storyboard&gt;
      ...
      </TextBlock>
      </ScrollViewer>
      </Border>

  </DockPanel>
</Page>