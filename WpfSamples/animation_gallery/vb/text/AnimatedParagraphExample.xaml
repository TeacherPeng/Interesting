<!--
// Copyright © Microsoft Corporation.  All Rights Reserved.
// This code released under the terms of the 
// Microsoft Public License (MS-PL, http://opensource.org/licenses/ms-pl.html.)    
--> 
<!-- AnimatedParagraphExample.xaml
     Rotates a group of characters.
-->
<Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:SampleControls="SampleControls"
  x:Class="Microsoft.Samples.Animation.AnimationGallery.AnimatedParagraphExample" 
  WindowTitle="Text Animation Example">
  
  <Page.Background>
    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
      <LinearGradientBrush.GradientStops>
        <GradientStop Color="Black" Offset="0.4" />
        <GradientStop Color="#333333" Offset="0.5" />
        <GradientStop Color="Black" Offset="0.6" />
      </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
  </Page.Background>  
  
  <Grid VerticalAlignment="Stretch">
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition  />
    </Grid.RowDefinitions>

    <Border  Grid.Column="0" Grid.Row="0" 
      BorderThickness="1"
      Margin="10" VerticalAlignment="Center">
      <Border.Background>
        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
          <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0.0" Color="Gray" />
            <GradientStop Offset="1.0" Color="Black" />
          </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
      </Border.Background>      
      
      
      <!-- Editable text -->
      <TextBox   
        Name="EntryTextBox" 
        Width="300" 
        Foreground="Blue"
        TextWrapping="Wrap"
        VerticalAlignment="Center"
        Margin="10" >
        <TextBox.Text>
          Windows Presentation Foundation unifies how Windows creates, displays, and manipulates documents, media, and the user interface, enabling developers and designers to create visually stunning, personalized user experiences that improve the application connection with the user.
        </TextBox.Text>
      </TextBox>   
    </Border>
   

    <Border Grid.Column="0" Grid.Row="1"
      BorderThickness="1"
      Margin="10" Background="{StaticResource MyGridBrushResource}">

      <Border.BorderBrush>
        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
          <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0.0" Color="Gray" />
            <GradientStop Offset="1.0" Color="Black" />
          </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
      </Border.BorderBrush>         
      
      <!-- A copy of the editable text is displayed in this
           TextBlock and rotated. -->
      <TextBlock 
        Name="SpecialEffectsTextBlock"  
        VerticalAlignment="Center"
        HorizontalAlignment="Center"
        FontFamily="Segoe UI"
        FontSize="18 pt"     
        TextWrapping="Wrap"
        TextAlignment="Justify"
        Foreground="Black"
        Margin="75"
        SizeChanged="textBlockSizeChanged">
        
        <!-- Binds the editable text to this TextBlock. -->
        <TextBlock.Text>  
          <Binding ElementName="EntryTextBox" Path="Text"/>  
        </TextBlock.Text>
        
        <TextBlock.TextEffects>
          <TextEffect x:Name="RotationTextEffect" 
            PositionStart="0"
            PositionCount="0">
            <TextEffect.Transform>
              <RotateTransform 
                x:Name="TextEffectRotateTransform" 
                Angle="0" CenterX="200" CenterY="200" />
            </TextEffect.Transform>
          </TextEffect>     
        </TextBlock.TextEffects>    
        <TextBlock.Triggers>
          <EventTrigger RoutedEvent="TextBlock.Loaded">
            <BeginStoryboard>
              <Storyboard>
              
                <!-- Animates the angle of a RotateTransform 
                     that's been applied to the text. -->
                <DoubleAnimation         
                  Storyboard.TargetName="TextEffectRotateTransform"
                  Storyboard.TargetProperty="Angle"
                  From="0" To="360"
                  Duration="0:0:15"
                  RepeatBehavior="Forever" />
                  
                <!-- Animates the number of characters affected
                     by the TextEffect from 0 to the number of
                     characters contained by the TextBox. -->  
                <Int32Animation
                  Storyboard.TargetName="RotationTextEffect"
                  Storyboard.TargetProperty="PositionCount"
                  From="0" To="{Binding ElementName=EntryTextBox, Path=Text.Length}"
                  Duration="0:0:45"
                  RepeatBehavior="Forever" 
                  AutoReverse="True" />            
              </Storyboard>
            </BeginStoryboard>
          </EventTrigger>
        </TextBlock.Triggers> 
      </TextBlock>
    </Border>
  </Grid>
</Page>